pipeline {
    agent any

    environment {
        // Ajusta si usas rutas absolutas
        PATH = "${HOME}/.local/bin:${PATH}"
        // Para react
        REACT_APP_API_URL = 'https://<TU_API_GATEWAY_URL>'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('AnÃ¡lisis de Vulnerabilidades (Checkov)') {
            steps {
                sh '''
                    if ! command -v checkov >/dev/null 2>&1; then
                        pip install --user checkov
                    fi
                    checkov -d infra/ --output cli | tee checkov_report.txt
                '''
            }
        }
        stage('Empaquetar Lambdas') {
            steps {
                // Llama tu script para crear los .zip de lambdas
                powershell 'backend\\build_all_lambdas.ps1'
            }
        }
        stage('Pruebas unitarias (pytest)') {
            steps {
                sh '''
                    pip install --user pytest
                    pytest backend/tests | tee pytest_report.txt
                '''
            }
        }
        stage('Terraform Plan & Apply') {
            steps {
                dir('infra') {
                    withCredentials([string(credentialsId: 'AWS_ACCESS_KEY_ID', variable: 'AWS_ACCESS_KEY_ID'),
                                     string(credentialsId: 'AWS_SECRET_ACCESS_KEY', variable: 'AWS_SECRET_ACCESS_KEY')]) {
                        sh '''
                            terraform init
                            terraform plan -out=tfplan
                            terraform apply -auto-approve tfplan
                        '''
                    }
                }
            }
        }
        stage('Build Frontend (React)') {
            steps {
                dir('frontend/dashboard-iot') {
                    sh '''
                        npm install
                        npm run build
                    '''
                }
            }
        }
        stage('Upload Frontend to S3') {
            steps {
                // Ajusta el bucket al nombre real (ver outputs de Terraform)
                sh '''
                    aws s3 sync frontend/dashboard-iot/build s3://iot-monitoreo-dashboard-<TU_SUFIJO> --delete
                '''
            }
        }
    }
    post {
        always {
            archiveArtifacts artifacts: 'checkov_report.txt', allowEmptyArchive: true
            archiveArtifacts artifacts: 'pytest_report.txt', allowEmptyArchive: true
        }
    }
}
